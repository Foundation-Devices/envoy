// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'errors.freezed.dart';

@freezed
sealed class ComposeTxError with _$ComposeTxError implements FrbException {
  const ComposeTxError._();

  const factory ComposeTxError.coinSelectionError(
    String field0,
  ) = ComposeTxError_CoinSelectionError;
  const factory ComposeTxError.error(
    String field0,
  ) = ComposeTxError_Error;
  const factory ComposeTxError.insufficientFunds(
    String field0,
  ) = ComposeTxError_InsufficientFunds;
  const factory ComposeTxError.insufficientFees(
    BigInt field0,
  ) = ComposeTxError_InsufficientFees;
  const factory ComposeTxError.insufficientFeeRate(
    BigInt field0,
  ) = ComposeTxError_InsufficientFeeRate;

  static Future<ComposeTxError> mapErr(
          {required CreateTxError createTxError}) =>
      RustLib.instance.api
          .crateApiErrorsComposeTxErrorMapErr(createTxError: createTxError);
}
