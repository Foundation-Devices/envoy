// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class BitcoinTransaction {
  final String txId;
  final int blockHeight;
  final int confirmations;
  final BigInt fee;
  final BigInt amount;
  final List<Input> inputs;
  final List<Output> outputs;
  final String? note;

  const BitcoinTransaction({
    required this.txId,
    required this.blockHeight,
    required this.confirmations,
    required this.fee,
    required this.amount,
    required this.inputs,
    required this.outputs,
    this.note,
  });

  @override
  int get hashCode =>
      txId.hashCode ^
      blockHeight.hashCode ^
      confirmations.hashCode ^
      fee.hashCode ^
      amount.hashCode ^
      inputs.hashCode ^
      outputs.hashCode ^
      note.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BitcoinTransaction &&
          runtimeType == other.runtimeType &&
          txId == other.txId &&
          blockHeight == other.blockHeight &&
          confirmations == other.confirmations &&
          fee == other.fee &&
          amount == other.amount &&
          inputs == other.inputs &&
          outputs == other.outputs &&
          note == other.note;
}

class Input {
  final String txId;
  final int vout;

  const Input({
    required this.txId,
    required this.vout,
  });

  @override
  int get hashCode => txId.hashCode ^ vout.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Input &&
          runtimeType == other.runtimeType &&
          txId == other.txId &&
          vout == other.vout;
}

class Output {
  final String txId;
  final int vout;
  final BigInt amount;
  final String? tag;
  final bool? doNotSpend;

  const Output({
    required this.txId,
    required this.vout,
    required this.amount,
    this.tag,
    this.doNotSpend,
  });

  @override
  int get hashCode =>
      txId.hashCode ^
      vout.hashCode ^
      amount.hashCode ^
      tag.hashCode ^
      doNotSpend.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Output &&
          runtimeType == other.runtimeType &&
          txId == other.txId &&
          vout == other.vout &&
          amount == other.amount &&
          tag == other.tag &&
          doNotSpend == other.doNotSpend;
}
