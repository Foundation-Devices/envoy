// Mocks generated by Mockito 5.4.3 from annotations
// in envoy/test/server_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http_tor/http_tor.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:schedulers/schedulers.dart' as _i3;
import 'package:tor/tor.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTor_0 extends _i1.SmartFake implements _i2.Tor {
  _FakeTor_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeParallelScheduler_1 extends _i1.SmartFake
    implements _i3.ParallelScheduler {
  _FakeParallelScheduler_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDownload_3 extends _i1.SmartFake implements _i4.Download {
  _FakeDownload_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpTor].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpTor extends _i1.Mock implements _i4.HttpTor {
  MockHttpTor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Tor get tor => (super.noSuchMethod(
        Invocation.getter(#tor),
        returnValue: _FakeTor_0(
          this,
          Invocation.getter(#tor),
        ),
      ) as _i2.Tor);

  @override
  _i3.ParallelScheduler get scheduler => (super.noSuchMethod(
        Invocation.getter(#scheduler),
        returnValue: _FakeParallelScheduler_1(
          this,
          Invocation.getter(#scheduler),
        ),
      ) as _i3.ParallelScheduler);

  @override
  _i5.Future<_i4.Response> get(
    String? uri, {
    String? body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [uri],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> post(
    String? uri, {
    String? body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<String> getIp() => (super.noSuchMethod(
        Invocation.method(
          #getIp,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getIp,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i4.Download> getFile(
    String? path,
    String? uri,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [
            path,
            uri,
          ],
        ),
        returnValue: _i5.Future<_i4.Download>.value(_FakeDownload_3(
          this,
          Invocation.method(
            #getFile,
            [
              path,
              uri,
            ],
          ),
        )),
      ) as _i5.Future<_i4.Download>);
}
